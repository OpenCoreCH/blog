<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Sre on Roman's Random Thoughts</title><link>https://blog.opencore.ch/tags/sre/</link><description>Recent content in Sre on Roman's Random Thoughts</description><generator>Hugo</generator><language>en</language><lastBuildDate>Wed, 12 Jan 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://blog.opencore.ch/tags/sre/index.xml" rel="self" type="application/rss+xml"/><item><title>Using SavaPage as a Frontend for uniFLOW</title><link>https://blog.opencore.ch/posts/savapage-uniflow/</link><pubDate>Wed, 12 Jan 2022 00:00:00 +0000</pubDate><guid>https://blog.opencore.ch/posts/savapage-uniflow/</guid><description>&lt;p>A &lt;a href="https://www.uniflowonline.com">uniFLOW&lt;/a> Queue (that is available over SMB) can be integrated quite easily into &lt;a href="https://www.savapage.org/">SavaPage&lt;/a> with the CUPS SMB backend. To add it, simply run the following command on the SavaPage server:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>lpadmin -p uniflow_queue -v smb://serviceaccount:servicepassword@domain/uniflow_server/uniflow_queue -P path/to/driver.ppd
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>While this works, all print jobs will arrive at the uniFLOW server with the used &lt;code>serviceaccount&lt;/code>.
SavaPage sends the username of the user that submitted the job in the &lt;code>For&lt;/code> attribute of the transmitted PostScript file.
However, uniFlOW considers in its default configuration only the user that submitted the print job to the SMB queue and ignores this attribute.
Follow-Me-Printing will therefore not work, as all print jobs are assigned to the account &lt;code>serviceaccount&lt;/code>.&lt;/p></description></item><item><title>Unicode Normalization Forms: When รถ != รถ</title><link>https://blog.opencore.ch/posts/unicode-normalization-forms/</link><pubDate>Tue, 01 Jun 2021 00:00:00 +0000</pubDate><guid>https://blog.opencore.ch/posts/unicode-normalization-forms/</guid><description>&lt;p>Some time ago, a very weird issue was reported to me about a Nextcloud system. The user uploaded a file with an &amp;ldquo;รถ&amp;rdquo; on a SMB share that was configured as an external storage in the Nextcloud server. But when accessing the folder containing the file over WebDAV, it did not appear (no matter which WebDAV client was used). After ruling out the usual causes (wrong permissions, etc&amp;hellip;), I analyzed the network traffic between the WebDAV client and the server and saw that the file name is indeed not returned after issuing a &lt;code>PROPFIND&lt;/code>. So I set some breakpoints in the Nextcloud source code to analyze if it is also not returned by the SMB server.
It was returned by the SMB server, but when the Nextcloud system requested more metadata for the file (with the path in the request), the SMB server returned a &amp;ldquo;file not found&amp;rdquo; error, which lead Nextcloud to discard the file.
How can it happen that the file is first returned by the SMB server when listing files but then the server suddenly reports an error when requesting more metadata?&lt;/p></description></item></channel></rss>